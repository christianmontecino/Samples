package com.water.reports;

import java.io.IOException;
import java.sql.*;
import java.util.*;
import java.util.Hashtable;
import java.util.Locale;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionServlet;
import org.apache.struts.util.MessageResources;

public final class FrontMembersAction extends Action {

	public ActionForward perform(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException, ServletException {

		// Extract attributes we will need

		Locale locale = getLocale(request);
		MessageResources messages = getResources();
		User user = null;

		HttpSession session = request.getSession();
		if (session.getAttribute("" + session.getId()) == null) {
			user = new User();
			session.setAttribute("" + session.getId(), user);
		} else {
			user = (User) session.getAttribute("" + session.getId());
		}

		// Validate the request parameters specified by the user
		ActionErrors errors = new ActionErrors();

		String rep = "";
		String action = ((FrontMembersForm) form).getAction();
		int pagination = ((FrontMembersForm) form).getPagination();
		int from = ((FrontMembersForm) form).getFrom();

		try {

			rep = "frontmembers";
			user.setRep(rep);
			user.setPagination(pagination);
			user.setOffset(from);
			session.setAttribute("" + session.getId(), user);

		} catch (Exception e) {
			e.printStackTrace();
		}

		// Report any errors we have discovered back to the original form
		if (!errors.empty()) {
			saveErrors(request, errors);
			return (new ActionForward(mapping.getInput()));
		}

		// Remove the obsolete form bean
		if (mapping.getAttribute() != null) {
			if ("request".equals(mapping.getScope()))
				request.removeAttribute(mapping.getAttribute());
			else
				session.removeAttribute(mapping.getAttribute());
		}

		// Forward control to the specified success URI
		return (mapping.findForward("frontmembers"));

	}

}
